package ahodanenok.reactivestreams.publisher.verification;

import org.reactivestreams.*;
import org.reactivestreams.tck.*;

import ahodanenok.reactivestreams.publisher.FromCallbackPublisher;

// todo: returning multiple values from publisher
public class FromCallbackPublisherManyVerificationTest extends PublisherVerification<Long> {

    public FromCallbackPublisherManyVerificationTest() {
        super(new TestEnvironment());
    }

    @Override
    public Publisher<Long> createPublisher(long elements) {
        return new FromCallbackPublisher<>(callback -> callback.setOnRequest(n -> {
            for (long i = 0; i < n; i++) {
                callback.value(n);
            }
        }));
    }

    @Override
    public Publisher<Long> createFailedPublisher() {
        return new FromCallbackPublisher<>(callback -> callback.error(new RuntimeException()));
    }

    @Override
    public long boundedDepthOfOnNextAndRequestRecursion() {
        return 1;
    }
}
